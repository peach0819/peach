

1、利用hive的二级分区
dayid固定，planno作为动态分区
insert overwrite table xxx partition (dayid = 'yyyyMM', planno )
这样就可以只查询那个分区的数据并写入，不会做额外的分区覆盖，补数的时候就可以这么用了

2、正常跑的时候，每天跑正向全量就行了，补数的时候查ods表多一个条件
ytdw.simple_expr(plan_no, '$planno', "=") = 1

3、线上历史数据迁移，历史脚本数据兼容补数

4、正向一个任务应该没影响，
逆向没法保证一个分区，因为要查询的是历史的分区，所以12个任务？12_month_ago ~ 1month_ago

5、订单清洗表存三个月，就是因为方案只允许建上个月和上上个月的，为了补数用，其实没必要，存一个月就好了，数据量变成三分之一

6、然后逆向表的数据，就是用当时月最后一天的订单数据（这个表里面的是当时退款的信息）再关联上最新的的退款信息，用作追溯
逆向可以只取12个月的数据， 不用join全表
