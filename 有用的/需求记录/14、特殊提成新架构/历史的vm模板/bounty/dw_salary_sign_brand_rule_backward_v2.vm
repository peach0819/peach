#set($payoutObj = $plan.payoutObject)
#set($globalFilters = $plan.defaultGlobalFilters)
#set($indicatorFilters = $plan.indicatorFilters)
#set($indicator = $plan.indicator)
#parse("func.vm")

#if($shellMode)
v_date=$1

source ../sql_variable.sh $v_date
hive -v -e "

#end

use ytdw;

insert overwrite table dw_salary_sign_brand_rule_public_d partition (dayid='$v_date',planno='${plan.no}',pltype='pre')
select
   from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') as update_time,--更新时间
   from_unixtime(unix_timestamp(),'yyyy-MM') as update_month,--执行月份
   '历史方案' as plan_type ,--明细类型
   --方案基础信息,
   '${plan.month}' as plan_month,--方案月份
   '${plan.intervalStartDayDisplay}~${plan.intervalEndDayDisplay}' as plan_pay_time,--方案时间
   '${plan.name}' as plan_name,--方案名称
   '$!{plan.bizGroupId}' as plan_group_id, --归属业务组id
   '$!{plan.bizGroupName}' as plan_group_name, --归属业务组
   brand_id,
	       brand_name,--商品品牌
           item_style,
		   item_style_name,--ab类型
           shop_id,
		   shop_name,--门店名称
           store_type,--门店类型
           store_type_name,
		   war_zone_id       , --战区经理ID
           war_zone_name     , --战区经理
           war_zone_dep_id   , --战区ID
           war_zone_dep_name , --战区
           area_manager_id     	,   --大区经理id
           area_manager_name   	,   --大区经理
           area_manager_dep_id,--大区区域ID
           area_manager_dep_name,   --大区
		   bd_manager_id       	,--主管id
           bd_manager_name     	,--主管
           bd_manager_dep_id ,--主管区域ID
           bd_manager_dep_name 	,--区域
		   service_user_id_freezed,
           service_department_id_freezed,
		   service_user_name_freezed,--冻结销售人员姓名
		   service_feature_name_freezed,--冻结销售人员职能
		   service_job_name_freezed,--冻结销售人员角色
		   service_department_name_freezed,--冻结销售人员部门
		   new_sign_time,--新签时间
		   new_sign_day, --新签日期
           new_sign_rn,--新签时间排名达成
           shop_brand_sign_day,--门店品牌新签时间
		   --默认指标--
           gmv_less_refund,  --实货gmv-退款
           gmv,--实货gmv,
		   pay_amount,--实货支付金额
		   pay_amount_less_refund,--实货支付金额-退款
           refund_actual_amount,--实货退款
           refund_retreat_amount,--实货清退金额
		   new_sign_line,
		   is_over_sign_line,--是否满足新签门槛
           is_first_sign,--是否首次达成
 		   is_succ_sign,--是否新签成功
            grant_object_type ,
            grant_object_user_id ,
            grant_object_user_name ,
            grant_object_user_dep_id ,
            grant_object_user_dep_name ,
   users.leave_time as leave_time,--发放对象离职时间
   case when users.leave_time is not null and new_sign_day > users.leave_time then '是' else '否' end as is_leave,--发放对象是否离职
    --统计指标名称
    '${indicator.title}' as sts_target_name
 from
 (
select
           brand_id,
	       brand_name,--商品品牌
        item_style,
		   item_style_name,--ab类型
           shop_id,
		   shop_name,--门店名称
           store_type,--门店类型
           store_type_name,
		   war_zone_id       , --战区经理ID
           war_zone_name     , --战区经理
           war_zone_dep_id   , --战区ID
           war_zone_dep_name , --战区
           area_manager_id     	,   --大区经理id
           area_manager_name   	,   --大区经理
           area_manager_dep_id,--大区区域ID
           area_manager_dep_name,   --大区
		   bd_manager_id       	,--主管id
           bd_manager_name     	,--主管
           bd_manager_dep_id ,--主管区域ID
           bd_manager_dep_name 	,--区域
		   service_user_id_freezed,
           service_department_id_freezed,
		   service_user_name_freezed,--冻结销售人员姓名
		   service_feature_name_freezed,--冻结销售人员职能
		   service_job_name_freezed,--冻结销售人员角色
		   service_department_name_freezed,--冻结销售人员部门
		   new_sign_time,--新签时间
		   new_sign_day, --新签日期
           new_sign_rn,--新签时间排名达成
           shop_brand_sign_day,--门店品牌新签时间
		   --默认指标--
           gmv_less_refund,  --实货gmv-退款
           gmv,--实货gmv,
		   pay_amount,--实货支付金额
		   pay_amount_less_refund,--实货支付金额-退款
           refund_actual_amount,--实货退款
           refund_retreat_amount,--实货清退金额
            new_sign_line,
            is_over_sign_line,
            case when new_sign_rn=1 then '是' else '否' end as is_first_sign,--是否首次达成
            case when gmv_less_refund >= new_sign_line  and new_sign_rn=1 then '是' else '否' end as is_succ_sign,--是否新签成功
    #*
        替换内容
        --发放对象--
        $发放对象类型 as grant_object_type,--发放对象类型
        case when $发放对象类型 = '战区经理' then  war_zone_id when $发放对象类型 = '大区经理' then  area_manager_id
        when $发放对象类型 ='BD主管' then bd_manager_id
        when $发放对象类型 ='BD' then service_user_id_freezed
        else null end as grant_object_user_id, --发放对象ID
        case when $发放对象类型 = '战区经理' then  war_zone_name when $发放对象类型 = '大区经理' then  area_manager_name
        when $发放对象类型 ='BD主管' then bd_manager_name
        when $发放对象类型 ='BD' then service_user_name_freezed
        else null end as grant_object_user_name,--发放对象名称,
        case when $发放对象类型 = '战区经理' then  war_zone_dep_id when $发放对象类型 = '大区经理' then  area_manager_dep_id
        when $发放对象类型 ='BD主管' then bd_manager_dep_id
        when $发放对象类型 ='BD' then service_department_id_freezed
        else null end as grant_object_user_dep_id,--发放对象部门ID
        case when $发放对象类型 = '战区经理' then  war_zone_dep_name when $发放对象类型 = '大区经理' then  area_manager_dep_name
        when $发放对象类型 ='BD主管' then bd_manager_dep_name
        when $发放对象类型 ='BD' then service_department_name_freezed
        else null end as grant_object_user_dep_name--发放对象部门
    *#
    '${payoutObj.name}' as grant_object_type,
    --发放对象用户ID
    #if($payoutObj.code == 'BD' || $payoutObj.code == 'BIG_BD')
        service_user_id_freezed as grant_object_user_id,
    #else
        ${payoutObj.userIdSql} as grant_object_user_id,
    #end
    --发放对象用户姓名
    #if($payoutObj.code == 'BD' || $payoutObj.code == 'BIG_BD')
        service_user_name_freezed as grant_object_user_name,
    #else
        ${payoutObj.userNameSql} as grant_object_user_name,
    #end
    -- 发放对象部门ID
    #if($payoutObj.code == 'BD' || $payoutObj.code == 'BIG_BD')
        service_department_id_freezed as grant_object_user_dep_id,
    #else
        ${payoutObj.deptIdSql} as grant_object_user_dep_id,
    #end
    #if($payoutObj.code == 'BD' || $payoutObj.code == 'BIG_BD')
        service_department_name_freezed as grant_object_user_dep_name
    #else
        ${payoutObj.deptNameSql} as grant_object_user_dep_name  --发放对象部门名称
    #end
from
(
select
           brand_id,
	       brand_name,--商品品牌
            item_style,
		   item_style_name,--ab类型
           shop_id,
		   shop_name,--门店名称
           store_type,--门店类型
           store_type_name,
		   war_zone_id       , --战区经理ID
           war_zone_name     , --战区经理
           war_zone_dep_id   , --战区ID
           war_zone_dep_name , --战区
           area_manager_id     	,   --大区经理id
           area_manager_name   	,   --大区经理
           area_manager_dep_id,--大区区域ID
           area_manager_dep_name,   --大区
		   bd_manager_id       	,--主管id
           bd_manager_name     	,--主管
           bd_manager_dep_id ,--主管区域ID
           bd_manager_dep_name 	,--区域
		   service_user_id_freezed,
           service_department_id_freezed,
		   service_user_name_freezed,--冻结销售人员姓名
		   service_feature_name_freezed,--冻结销售人员职能
		   service_job_name_freezed,--冻结销售人员角色
		   service_department_name_freezed,--冻结销售人员部门
		   new_sign_time,--新签时间
		   new_sign_day, --新签日期
		   row_number()over(partition by shop_id,brand_id,is_over_sign_line order by new_sign_time) as new_sign_rn,--新签时间排名达成
           shop_brand_sign_day,--门店品牌新签时间
		   --默认指标--
           gmv_less_refund,  --实货gmv-退款
           gmv,--实货gmv
		   pay_amount,--实货支付金额
		   pay_amount_less_refund,--实货支付金额-退款
           refund_actual_amount,--实货退款
           refund_retreat_amount,--实货清退金额
            new_sign_line,
            is_over_sign_line
 from
 (
--
   select
           brand_id,
	       brand_name,--商品品牌
            item_style,
		   item_style_name,--ab类型
           shop_id,
		   shop_name,--门店名称
           store_type,--门店类型
           store_type_name,
		   war_zone_id       , --战区经理ID
           war_zone_name     , --战区经理
           war_zone_dep_id   , --战区ID
           war_zone_dep_name , --战区
           area_manager_id     	,   --大区经理id
           area_manager_name   	,   --大区经理
           area_manager_dep_id,--大区区域ID
           area_manager_dep_name,   --大区
		   bd_manager_id       	,--主管id
           bd_manager_name     	,--主管
           bd_manager_dep_id ,--主管区域ID
           bd_manager_dep_name 	,--区域
		   service_user_id_freezed,
           service_department_id_freezed,
		   service_user_name_freezed,--冻结销售人员姓名
		   service_feature_name_freezed,--冻结销售人员职能
		   service_job_name_freezed,--冻结销售人员角色
		   service_department_name_freezed,--冻结销售人员部门
		   min(pay_time) as new_sign_time,--新签时间
		   min(pay_day) as new_sign_day, --新签日期
           shop_brand_sign_day,--门店品牌新签时间
		   --默认指标--
           sum(gmv_less_refund) as gmv_less_refund,  --实货gmv-退款
           sum(gmv) as gmv,--实货gmv
		   sum(pay_amount) as pay_amount,--实货支付金额
		   sum(pay_amount_less_refund) as pay_amount_less_refund,--实货支付金额-退款
           sum(refund_actual_amount) as refund_actual_amount,--实货退款
           sum(refund_retreat_amount) as refund_retreat_amount,--实货清退金额
            #foreach($f in $indicatorFilters)
                #* 新签门槛线 *#
                #if($f.id == 15)
                    ${f.values[0]} as new_sign_line,
                case when sum(gmv_less_refund) >= ${f.values[0]} then '是' else '否' end as is_over_sign_line--是否满足新签门槛
                #end
                #*
                   $新签门槛线 as new_sign_line,
                   case when gmv_less_refund >= $新签门槛线 then '是' else '否' end as is_over_sign_line,--是否满足新签门槛
                   case when new_sign_rn=1 then '是' else '否' end as is_first_sign,--是否首次达成
                   case when gmv_less_refund >= $新签门槛线  and new_sign_rn=1 then '是' else '否' end as is_succ_sign,--是否新签成功
                *#
            #end
	   ---业务中间表
	   from
	   (
	    select
	           order.order_id,
			   order.trade_no,
               business_unit,--业务域,
               category_id_first,  --商品一级类目,
               category_id_second, --商品二级类目,
               category_id_first_name,
               category_id_second_name,
               brand_id,
               brand_name,--商品品牌,
               item_id,
               item_name,--商品名称,
               item_style,
               item_style_name,--ab类型,
               is_sp_shop,--是否服务商订单
               is_bigbd_shop,--是否大BD门店
               is_spec_order,--是否特殊订单,
               shop_item_sign_day,
               shop_item_sign_time,
               shop_brand_sign_day,
               shop_brand_sign_time,
               pay_time,
               pay_day,
               order.shop_id,
               shop_name,--门店名称,
               store_type,--门店类型,
               store_type_name,
               war_zone_id       , --战区经理ID
               war_zone_name     , --战区经理
               war_zone_dep_id   , --战区ID
               war_zone_dep_name , --战区
               area_manager_id     	,   --大区经理id
               area_manager_name   	,   --大区经理
               area_manager_dep_id, --大区区域ID
               area_manager_dep_name,   --大区
               bd_manager_id       	,--主管id
               bd_manager_name     	,--主管
               bd_manager_dep_id ,--主管区域ID
               bd_manager_dep_name 	,--区域
               service_user_id_freezed,
               service_department_id_freezed,
               service_user_name_freezed,--冻结销售人员姓名,
               service_feature_name_freezed,--冻结销售人员职能,
               service_job_name_freezed,--冻结销售人员角色,
               service_department_name_freezed,--冻结销售人员部门,
               --默认指标--
               --默认指标--
               order.gmv - nvl(refund.refund_actual_amount,0) as gmv_less_refund,  --实货gmv-退款,
               order.pay_amount,--实货支付金额
               order.pay_amount - nvl(refund.refund_actual_amount,0)  as pay_amount_less_refund,--实货支付金额-退款
               gmv,--实货gmv,
               nvl(refund.refund_actual_amount,0) as refund_actual_amount,--实货退款,
               nvl(refund.refund_retreat_amount,0) as refund_retreat_amount--实货清退金额
	     from
	   (
	   select *
	     from dw_salary_sign_rule_public_mid_v2_d
         ---过滤条件中的 全局过滤条件
         where dayid='${plan.monthLastDay}'
          and shop_brand_sign_day between '${plan.intervalStartDay}' and '${plan.intervalEndDay}'
          and pay_day <='${plan.intervalEndDay}'
          #*
          {% if 一级类目%}
              and 业务中间表.一级类目 in (....)
          {% if 品牌%}
              and 业务中间表.品牌 in (....)
          *#
          #foreach ($filter in $globalFilters)
              #* 剔除掉新签门槛线的条件 *#
          and #buildFilter($filter)
          #end
	   ) order
   --退款表
    left join
    (select order_id,sum(refund_actual_amount) as refund_actual_amount,
        sum(case when multiple_refund=10 then refund_actual_amount else 0 end) as refund_retreat_amount
	   from dw_afs_order_refund_new_d --（后期通过type识别清退金额）
       where dayid ='$v_date'
	   and refund_status=9
       group by order_id
     ) refund on order.order_id=refund.order_id
	) big_tbl
    group by

	       brand_id,
	       brand_name,--商品品牌
            item_style,
		   item_style_name,--ab类型
           shop_id,
		   shop_name,--门店名称
           store_type,--门店类型
           store_type_name,
		   war_zone_id       , --战区经理ID
           war_zone_name     , --战区经理
           war_zone_dep_id   , --战区ID
           war_zone_dep_name , --战区
           area_manager_id     	,   --大区经理id
           area_manager_name   	,   --大区经理
           area_manager_dep_id,--大区区域ID
           area_manager_dep_name,   --大区
		   bd_manager_id       	,--主管id
           bd_manager_name     	,--主管
           bd_manager_dep_id ,--主管区域ID
           bd_manager_dep_name 	,--区域
		   service_user_id_freezed,
           service_department_id_freezed,
		   service_user_name_freezed,--冻结销售人员姓名
		   service_feature_name_freezed,--冻结销售人员职能
		   service_job_name_freezed,--冻结销售人员角色
		   service_department_name_freezed,--冻结销售人员部门
		   shop_brand_sign_day
	) sign_tmp
) sign_mid
) sign_rule
left join
( select user_id, substr(leave_time,1,8) as leave_time from dwd_user_admin_d where dayid='${plan.monthLastDay}'
) users on sign_rule.grant_object_user_id =users.user_id
where sign_rule.grant_object_user_id is not null
;
#* 公用宏，排名返现 *#
#macro(buildPayoutRank $payoutRules $elseValue)
,case
    #foreach($pr in $payoutRules)
    when grant_object_rk <= ${pr.ladderAmtRange[0]} then '${pr.payoutStuff}'
    #end
else ${elseValue} end as commission_reward --提成奖品
#end
#* 公用宏，提成类型通用逻辑 *#
#macro(buildPayoutRule $payoutRules $elseValue)
,case
    #foreach($pr in $payoutRules)
    when
        #foreach($value in $pr.ladderAmtRange)
        sts_target #if($velocityCount == 1) >= #else < #end ${value}
            #if($velocityHasNext) and #end
        #end
    then '${pr.payoutStuff}'
    #end
else ${elseValue} end as commission_reward --提成奖品
#end
#* 累计返点，累计阶梯返点逻辑 *#
#macro(buildPayoutRuleCash $payoutUpperLimit $payoutRules $isPercent)
,case
    #if($payoutUpperLimit)
        #foreach($pr in $payoutRules)
        when
            #foreach($value in ${pr.ladderAmtRange})
            sts_target #if($velocityCount == 1) >= #else < #end ${value}
                #if($velocityHasNext)
                and
                #else
                    #if($isPercent)
                    and sts_target * $ytUtil.divide(${pr.payoutStuff}, 100) #if($payoutUpperLimit) < $payoutUpperLimit #end
                    #else
                    and sts_target * ${pr.payoutStuff} #if($payoutUpperLimit) < $payoutUpperLimit #end
                    #end
                #end
            #end
            #if($isPercent)
            then round(sts_target * $ytUtil.divide(${pr.payoutStuff}, 100), 4)
            #else
            then round(sts_target * ${pr.payoutStuff}, 2)
            #end
        when
            #foreach($value in $pr.ladderAmtRange)
            sts_target #if($velocityCount == 1) >= #else < #end ${value}
                #if($velocityHasNext)
                and
                #else
                    #if($isPercent)
                    and sts_target * $ytUtil.divide(${pr.payoutStuff}, 100) #if($payoutUpperLimit) >= $payoutUpperLimit #end
                    #else
                    and sts_target * ${pr.payoutStuff} #if($payoutUpperLimit) >= $payoutUpperLimit #end
                    #end
                #end
            #end
        then $payoutUpperLimit
        #end
    #else
        #foreach($pr in $payoutRules)
        when
            #foreach($value in $pr.ladderAmtRange)
            sts_target #if($velocityCount == 1) >= #else < #end ${value}
                #if($velocityHasNext) and #end
            #end
            #if($isPercent)
            then round(sts_target * $ytUtil.divide($pr.payoutStuff, 100), 4)
            #else
            then round(sts_target * $pr.payoutStuff, 2)
            #end
        #end
    #end
else '0' end as commission_reward --提成奖品
#end

insert overwrite table dw_salary_backward_plan_sum_mid_d partition (dayid='$v_date',planno='${plan.no}')
select

    from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') as update_time,--更新时间
    from_unixtime(unix_timestamp(),'yyyy-MM') as update_month,--执行月份
    --方案基础信息
    plan_month,--方案月份
    plan_pay_time,--方案时间
	planno,--方案编号
    plan_name,--方案名称
    plan_group_id,--归属业务组ID
    plan_group_name,--归属业务组
     ---以下为个性化的配置信息---
    grant_object_type,--发放对象类型
    grant_object_user_id, --发放对象ID
    grant_object_user_name,--发放对象名称
	grant_object_user_dep_id,--发放对象部门ID
    grant_object_user_dep_name,--发放对象部门
    leave_time,--发放对象离职时间
    --统计指标名称
    sts_target_name,
	sts_target,--统计指标数值
    --方案扩展字段
    concat('grant_object_rk:',nvl(case when '${plan.payoutRuleType.title}' ='排名返现' then grant_object_rk else null end,''),'\;','grant_object_underling_cnt:',nvl(case when sts_target_name in ('人均新签品牌门店数','人均新签GMV','人均新签支付金额')  then  grant_object_underling_cnt else null end,'')) as real_coefficient_goal_rate
    --提成上限
    #if($plan.payoutUpperLimit)
        ,'${plan.payoutUpperLimit}' as commission_cap
    #else
        ,null as commission_cap
    #end
    --提成方案类型
    #if($plan.payoutRuleType)
        ,'${plan.payoutRuleType.title}' as commission_plan_type,
    #else
        null as commission_plan_type,
    #end
    --提成奖品类型
    #if($plan.payoutRuleType.code == 3)
        '实物' as commission_reward_type
    #else
        '金额' as commission_reward_type
    #end
    #*
        --无系数
        --根据统计指标数值及提成上限 换算出 提成奖品
        --累计阶梯逻辑
        --判断必须从大到小
        case when 是否有系数=否 and 提成类型='累计阶梯' and 统计指标数值>=200  then 5
        when 是否有系数=否 and 提成类型='累计阶梯' and 统计指标数值>=100 and 统计指标数值<200 then 2
        when 是否有系数=否 and 提成类型='累计阶梯' and 统计指标数值>=50  then 1
        else 0 end as commission_reward ,--提成奖品

        --无系数 累计返点
        --用户设置了提成上限才和提成上限比较，无提成上限时候去掉和提成上限比较的逻辑
        case when   统计指标数值>=200  and 统计指标数值 *5% < 提成上限 then 统计指标数值 *5%  --假设用户没设置提成上限，这里比较是有问题的
        when   统计指标数值>=200  and 统计指标数值 *5% >=提成上限 then 提成上限 --假设提成上限是0 这个逻辑是有问题的
        when  统计指标数值>=100 and 统计指标数值<200 and  统计指标数值 *2% <提成上限  then  统计指标数值 *2%
        when 统计指标数值>=100 and 统计指标数值<200 and  统计指标数值 *2% >=提成上限  then  提成上限
        --
        else 0 as commission_reward ,--提成奖品,

        --无系数 累计返实物
        case when   统计指标数值>=200   then  'iphone11'
        when  统计指标数值>=100 and 统计指标数值<200   then  'iphone4'
        --
        else '无奖品' as commission_reward --提成奖品,
    *#
    #if($plan.payoutRules && !$plan.payoutRules.isEmpty())
        #if($plan.payoutRuleType.code == 1)
            #buildPayoutRule($plan.payoutRules, '0')
        #end
    -- 累计返点
        #if($plan.payoutRuleType.code == 2)
            #buildPayoutRuleCash($plan.payoutUpperLimit, $plan.payoutRules, true)
        #end
        #if($plan.payoutRuleType.code == 3)
            -- 累计返实物
            #buildPayoutRule($plan.payoutRules, "'无奖品'")
        #end
        #if($plan.payoutRuleType.code == 4)
            -- 累计阶梯单价返点
            #buildPayoutRuleCash($plan.payoutUpperLimit, $plan.payoutRules, false)
        #end
        #if($plan.payoutRuleType.code == 5)
            -- 排名返现
            #buildPayoutRank($plan.payoutRules, '0')
        #end
    #end
 from
 (
select
    --方案基础信息
    plan_month,--方案月份
    plan_pay_time,--方案时间
    planno,--方案编号
    plan_name,--方案名称
    plan_group_id,--归属业务组ID
    plan_group_name,--归属业务组
    ---以下为个性化的配置信息---
    grant_object_type,--发放对象类型
    grant_object_user_id, --发放对象ID
    grant_object_user_name,--发放对象名称
    grant_object_user_dep_id,--发放对象部门ID
    grant_object_user_dep_name,--发放对象部门
    leave_time,--发放对象离职时间
    sts_target_name,--统计指标名称
    sts_target,---统计指标----
    grant_object_underling_cnt,
    if(sts_target>0,rank()over(order by sts_target desc ),null) as grant_object_rk
 from (
select
    --方案基础信息
    plan_month,--方案月份
    plan_pay_time,--方案时间
	planno,--方案编号
    plan_name,--方案名称
    plan_group_id,--归属业务组ID
    plan_group_name,--归属业务组
     ---以下为个性化的配置信息---
    grant_object_type,--发放对象类型
    grant_object_user_id, --发放对象ID
    grant_object_user_name,--发放对象名称
	grant_object_user_dep_id,--发放对象部门ID
    grant_object_user_dep_name,--发放对象部门
    leave_time,--发放对象离职时间
    sts_target_name,--统计指标名称
    max(nvl(underling_cnt,1)) as grant_object_underling_cnt,
	---统计指标----
    #* 6:新签门店数 4:新签品牌门店数 5:累计新签GMV *#
    #if($indicator.code == 'NEW_SIGNING_BRAND_3_NEW_SING_SHOPS')
    --'统计指标名称为新签门店数'
    count(distinct case when is_leave='否' and is_succ_sign='是' then shop_id else null end ) as sts_target--统计指标数值
    --and is_leave='否' and is_succ_sign='是' then count(distinct shop_id )
    #end
    #if($indicator.code == 'NEW_SIGNING_BRAND_3_NEW_SING_BRAND_SHOPS')
    --统计指标名称为新签品牌门店数'
    count(distinct case  when  is_leave='否' and is_succ_sign='是' then concat('_',shop_id,brand_id)  else null end ) as sts_target--统计指标数值
    #end
    #if($indicator.code == 'NEW_SIGNING_BRAND_3_ACC_NEW_SING_GMV')
    --'统计指标名称为新签GMV'
    sum(case when is_leave='否' and is_succ_sign='是' then gmv_less_refund else 0 end ) as  sts_target--统计指标数值
    #end
    #if($indicator.code == 'NEW_SIGNING_BRAND_3_ACC_NEW_SING_PAY_AMT')
    --'统计指标名称为累计新签支付金额'
    sum(case when is_leave='否' and is_succ_sign='是' then pay_amount_less_refund else 0 end ) as  sts_target--统计指标数值
    #end
    #if($indicator.code == 'NEW_SIGNING_BRAND_AVG_NEW_SING_SHOPS')
    --人均新签品牌门店数'
    count(distinct case  when  is_leave='否' and is_succ_sign='是' then concat('_',shop_id,brand_id)  else null end )/max(nvl(underling_cnt,1)) as sts_target--统计指标数值
    #end
    #if($indicator.code == 'NEW_SIGNING_BRAND_AVG_NEW_SING_GMV')
    --'人均新签品GMV'
    sum(case when is_leave='否' and is_succ_sign='是' then gmv_less_refund else 0 end )/max(nvl(underling_cnt,1)) as  sts_target--统计指标数值
    #end
    #if($indicator.code == 'NEW_SIGNING_BRAND_AVG_NEW_SING_PAY_AMT')
    --'人均新签支付金额'
    sum(case when is_leave='否' and is_succ_sign='是' then pay_amount_less_refund else 0 end )/max(nvl(underling_cnt,1)) as  sts_target--统计指标数值
    #end
    from
    (
    select *
        from dw_salary_sign_brand_rule_public_d
        where dayid ='$v_date' and pltype='pre' and planno='${plan.no}'
    ) t
    left join
    ( select user_id,underling_cnt
        from dws_usr_bd_manager_underling_d
        where dayid ='${plan.monthLastDay}'
    ) t1 on t.grant_object_user_id=t1.user_id
	group by
	plan_month,--方案月份
    plan_pay_time,--方案时间
	planno,--方案编号
    plan_name,--方案名称
    plan_group_id,--归属业务组ID
    plan_group_name,--归属业务组
     ---以下为个性化的配置信息---
    grant_object_type,--发放对象类型
    grant_object_user_id, --发放对象ID
    grant_object_user_name,--发放对象名称
	grant_object_user_dep_id,--发放对象部门ID
    grant_object_user_dep_name,--发放对象部门
    leave_time,--发放对象离职时间
    --统计指标名称
    sts_target_name
	) forward_plan_tmp
) forward_plan
;

#if($shellMode)
    "
    if [ "${plan.month}" -ne "$v_cur_month" ]; then
        hive -e "
#end

--历史方案汇总表
use ytdw;
insert overwrite table dw_salary_backward_plan_sum_d partition (dayid='$v_date',planno='${plan.no}')
select

    from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') as update_time,--更新时间
    from_unixtime(unix_timestamp(),'yyyy-MM') as update_month,--执行月份
    --方案基础信息,
    pre_plan.plan_month,--方案月份
    pre_plan.plan_pay_time,--方案时间
	pre_plan.planno,--方案编号
    pre_plan.plan_name,--方案名称
    ---以下为个性化的配置信息---
    pre_plan.plan_group_id,--归属业务组ID
    pre_plan.plan_group_name,--归属业务组
    pre_plan.grant_object_type,--发放对象类型
    pre_plan.grant_object_user_id, --发放对象ID
    pre_plan.grant_object_user_name,--发放对象名称,
    pre_plan.grant_object_user_dep_id,--发放对象部门ID
    pre_plan.grant_object_user_dep_name,--发放对象部门
    pre_plan.leave_time,--发放对象离职时间
    --统计指标名称
    pre_plan.sts_target_name,
	pre_plan.sts_target,--统计指标数值
    cur_plan.real_coefficient_goal_rate,--方案扩展字段
	pre_plan.commission_cap,--提成上限
    pre_plan.commission_plan_type,--提成方案类型
    pre_plan.commission_reward_type,--提成奖品类型
    case when pre_plan.commission_plan_type='排名返现' and cur_plan.commission_reward>pre_plan.commission_reward
    then pre_plan.commission_reward else cur_plan.commission_reward end as cur_commission_reward,--当前统计的提成奖品
	pre_plan.commission_reward as pre_commission_reward,--上一月份的提成奖品
    case when pre_plan.commission_reward_type='金额' then round(case when pre_plan.commission_plan_type='排名返现' and cur_plan.commission_reward>pre_plan.commission_reward
then pre_plan.commission_reward else cur_plan.commission_reward end - pre_plan.commission_reward, 2)
    when pre_plan.commission_reward_type='实物'
        and cur_plan.commission_reward!= pre_plan.commission_reward
        then concat_ws('-',cur_plan.commission_reward,pre_plan.commission_reward)
	else null end as commission_reward_change --提成奖品变化

 from
 (
   select  * from dw_salary_backward_plan_sum_mid_d
    where dayid ='$v_pre_month_last_day' and plan_no='${plan.no}'
	) pre_plan

    left join
	( select  * from dw_salary_backward_plan_sum_mid_d
      where dayid ='$v_date'  and plan_no='${plan.no}'
	) cur_plan on pre_plan.plan_no=cur_plan.plan_no
    and pre_plan.grant_object_user_id=cur_plan.grant_object_user_id

;
#if($shellMode)
"
fi
echo 'ok' &&
exit 0
#end