#set($payoutObj = $plan.payoutObject)
#set($globalFilters = $plan.defaultGlobalFilters)
#set($indicatorFilters = $plan.indicatorFilters)
#set($indicator = $plan.indicator)
#parse("func.vm")

use ytdw;

-- 当月明细
insert overwrite table dw_salary_gmv_rule_public_d partition (dayid='$v_date',planno='${plan.no}',pltype='cur')
select
   from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') as update_time,--更新时间
   from_unixtime(unix_timestamp(),'yyyy-MM') as update_month,--执行月份
   '当月方案' as plan_type ,--明细类型
   --方案基础信息,
   '${plan.month}' as plan_month,--方案月份
   '${plan.intervalStartDayDisplay}~${plan.intervalEndDayDisplay}' as plan_pay_time,--方案时间
   '${plan.name}' as plan_name,--方案名称
   '$!{plan.bizGroupId}' as plan_group_id, --归属业务组id
   '$!{plan.bizGroupName}' as plan_group_name, --归属业务组
   business_unit,--业务域,
   category_id_first,  --商品一级类目
   category_id_second, --商品二级类目
   category_id_first_name,
   category_id_second_name,
   brand_id,
   brand_name,--商品品牌
   item_id,
   item_name,--商品名称
   item_style,
   item_style_name,--ab类型,
   is_sp_shop,--是否服务商订单
   is_bigbd_shop,--是否大BD门店
   is_spec_order,--是否特殊订单
   shop_id,
   shop_name,--门店名称
   store_type,--门店类型
   store_type_name,
   war_zone_id       , --战区经理ID
   war_zone_name     , --战区经理
   war_zone_dep_id   , --战区ID
   war_zone_dep_name , --战区
   area_manager_id     	,   --大区经理id
   area_manager_name   	,   --大区经理
   area_manager_dep_id,--大区区域ID
   area_manager_dep_name,   --大区
   bd_manager_id       	,--主管id
   bd_manager_name     	,--主管
   bd_manager_dep_id,--主管区域ID
   bd_manager_dep_name 	,--区域
   sp_id,
   sp_name,--服务商名,
   sp_operator_name,--服务商经理名,
   service_user_names_freezed,--冻结销售人员姓名
   service_feature_names_freezed,--冻结销售人员职能
   service_job_names_freezed,--冻结销售人员角色
   service_department_names_freezed,--冻结销售人员部门
   service_info_freezed,
   service_info,
      --默认指标--
   gmv_less_refund,  --实货gmv-退款
   gmv,--实货gmv,
   pay_amount,--实货支付金额
   pay_amount_less_refund,--实货支付金额-退款
   refund_actual_amount,--实货退款
   refund_retreat_amount,--实货清退金额
   --发放对象--
   grant_object_type,--发放对象类型
   grant_object_user_id, --发放对象ID
   grant_object_user_name,--发放对象名称
   grant_object_user_dep_id,--发放对象部门ID
   grant_object_user_dep_name,--发放对象部门
   users.leave_time as leave_time,--发放对象离职时间
   case when users.leave_time is not null and pay_day>users.leave_time then '是' else '否' end as is_leave,--发放对象是否离职
    ---统计指标----
    --方案配置 无指标计算型 过滤条件
   '${indicator.title}' as sts_target_name--统计指标名称
    #*
        case when $统计指标名称 = '实货GMV-退款' and users.leave_time is null then gmv_less_refund
          when $统计指标名称 = '实货GMV' and users.leave_time is null  then gmv
		  when $统计指标名称 = '实货支付金额-退款' and users.leave_time is null  then pay_amount_less_refund
		  else 0 end as  sts_target,--统计指标数值
or
    --方案配置 有指标计算型 过滤条件
   case when $统计指标名称 = '实货GMV-退款' and $is_bigbd_shop ='是' and $is_sp_shop='是' and users.leave_time is null then gmv_less_refund
          when $统计指标名称 = '实货GMV' and $is_bigbd_shop ='是' and $is_sp_shop='是' and users.leave_time is null  then gmv
		  when $统计指标名称 = '实货支付金额-退款' and $is_bigbd_shop ='是' and $is_sp_shop='是' and users.leave_time is null  then pay_amount_less_refund
		  else 0 end as  sts_target--统计指标数值
    * *#
   ,case
    when (users.leave_time is null or pay_day<=users.leave_time)
    #foreach ($f in $indicatorFilters)
        and
        #* 1: 奖励计算时间（旧：方案日期） *#
        #if($f.id == 1)
            #buildFilter($f, "pay_day")
            #else
            #buildFilter($f)
        #end
    #end
    then
        #*实货GMV(去退款)*#
        #if($indicator.code == 'STOCK_GMV_1_GOODS_GMV_MINUS_REFUND')
            gmv_less_refund
        #end
        #*实货GMV*#
        #if($indicator.code == 'STOCK_GMV_1_GOODS_GMV')
            gmv
        #end
        #*实货支付金额(去优惠券去退款)*#
        #if($indicator.code == 'STOCK_GMV_1_GOODS_PAY_AMT_MINUS_COUNPONS_MINUS_REF')
            pay_amount_less_refund
        #end
    else 0 end as sts_target, --统计指标数值
    pay_day
from
(
select
   business_unit,--业务域,
   category_id_first,  --商品一级类目
   category_id_second, --商品二级类目
   category_id_first_name,
   category_id_second_name,
   brand_id,
   brand_name,--商品品牌
   item_id,
   item_name,--商品名称
   item_style,
   item_style_name,--ab类型
   is_sp_shop,--是否服务商订单
   is_bigbd_shop,--是否大BD门店
   is_spec_order,--是否特殊订单
   shop_id,
   shop_name,--门店名称
   store_type,--门店类型
   store_type_name,
   war_zone_id       , --战区经理ID
   war_zone_name     , --战区经理
   war_zone_dep_id   , --战区ID
   war_zone_dep_name , --战区
   area_manager_id     	,   --大区经理id
   area_manager_dep_id,--大区区域ID
   area_manager_name   	,   --大区经理
   area_manager_dep_name,   --大区
   bd_manager_id       	,--主管id
   bd_manager_name     	,--主管
   bd_manager_dep_id,--主管区域ID
   bd_manager_dep_name 	,--区域
   sp_id,
   sp_name,--服务商名
   sp_operator_name,--服务商经理名
   service_user_names_freezed,--冻结销售人员姓名
   service_feature_names_freezed,--冻结销售人员职能
   service_job_names_freezed,--冻结销售人员角色
   service_department_names_freezed,--冻结销售人员部门
   service_info_freezed,
   service_info,
   pay_day,
   --默认指标--
   gmv_less_refund,  --实货gmv-退款
   gmv,--实货gmv
   pay_amount,--实货支付金额
   pay_amount_less_refund,--实货支付金额-退款
   refund_actual_amount,--实货退款
   refund_retreat_amount,--实货清退金额
   --发放对象--
    '${payoutObj.name}' as grant_object_type,--发放对象类型
    ${payoutObj.userIdSql} as grant_object_user_id,   --发放对象用户ID
    ${payoutObj.userNameSql} as grant_object_user_name, --发放对象用户姓名
    ${payoutObj.deptIdSql} as grant_object_user_dep_id,-- 发放对象部门ID
    ${payoutObj.deptNameSql} as grant_object_user_dep_name  --发放对象部门名称
from
(
   select
           business_unit,--业务域
           category_id_first,  --商品一级类目
           category_id_second, --商品二级类目
           category_id_first_name,
           category_id_second_name,
	       brand_id,
	       brand_name,--商品品牌
           item_id,
		   item_name,--商品名称
		   item_style,
		   item_style_name,--ab类型
           is_sp_shop,--是否服务商订单
	       is_bigbd_shop,--是否大BD门店
           is_spec_order,--是否特殊订单
           shop_id,
		   shop_name,--门店名称
           store_type,--门店类型
           store_type_name,
		   war_zone_id       , --战区经理ID
           war_zone_name     , --战区经理
           war_zone_dep_id   , --战区ID
           war_zone_dep_name , --战区
           area_manager_id     	,   --大区经理id
           area_manager_dep_id,--大区区域ID
           area_manager_name   	,   --大区经理
           area_manager_dep_name,   --大区
		   bd_manager_id       	,--主管id
           bd_manager_name     	,--主管
           bd_manager_dep_id,--主管区域ID
           bd_manager_dep_name 	,--区域
		   sp_id,
           sp_name,--服务商名
		   sp_operator_name,--服务商经理名
		   service_user_names_freezed,--冻结销售人员姓名
		   service_feature_names_freezed,--冻结销售人员职能
		   service_job_names_freezed,--冻结销售人员角色
		   service_department_names_freezed,--冻结销售人员部门
           service_info_freezed,
           service_info,
		   --默认指标--
           sum(gmv_less_refund) as gmv_less_refund,  --实货gmv-退款
           sum(gmv) as gmv,--实货gmv
		   sum(pay_amount) as pay_amount,--实货支付金额
		   sum(pay_amount_less_refund) as pay_amount_less_refund,--实货支付金额-退款
           sum(refund_actual_amount) as refund_actual_amount,--实货退款
           sum(refund_retreat_amount) as refund_retreat_amount,--实货清退金额
           pay_day
    from
    ---业务中间表
      dw_salary_gmv_rule_public_mid_d
   ---过滤条件中的 全局过滤条件
   where dayid ='$v_date'
   and pay_day between '${plan.intervalStartDay}' and '${plan.intervalEndDay}'
    #foreach ($filter in $globalFilters)
        and #buildFilter($filter)
    #end
    group by
	       business_unit,--业务域
           category_id_first,  --商品一级类目
           category_id_second, --商品二级类目
           category_id_first_name,
           category_id_second_name,
	       brand_id,
	       brand_name,--商品品牌
           item_id,
		   item_name,--商品名称
		   item_style,
		   item_style_name,--ab类型
           is_sp_shop,--是否服务商订单
	       is_bigbd_shop,--是否大BD门店
           is_spec_order,--是否特殊订单
           shop_id,
		   shop_name,--门店名称
           store_type,--门店类型
           store_type_name,
		   war_zone_id       , --战区经理ID
           war_zone_name     , --战区经理
           war_zone_dep_id   , --战区ID
           war_zone_dep_name , --战区
           area_manager_id     	,   --大区经理id
           area_manager_name   	,   --大区经理
           area_manager_dep_id,--大区区域ID
           area_manager_dep_name,   --大区
		   bd_manager_id       	,--主管id
           bd_manager_name     	,--主管
           bd_manager_dep_id ,--主管区域ID
           bd_manager_dep_name 	,--区域
		   sp_id,
           sp_name,--服务商名
		   sp_operator_name,--服务商经理名(冻结)
		   service_user_names_freezed,--冻结销售人员姓名
		   service_feature_names_freezed,--冻结销售人员职能
		   service_job_names_freezed,--冻结销售人员角色
		   service_department_names_freezed,--冻结销售人员部门
           service_info_freezed,
           service_info,
           pay_day
) gmv_mid

) gmv_rule
left join
( select user_id, substr(leave_time,1,8) as leave_time from dwd_user_d where dayid='$v_date'
) users on gmv_rule.grant_object_user_id =users.user_id;

#* 公用宏，系数通用逻辑 *#
#macro(gmv_forward_buildCoefficientRules $coefficientRules)
,case
    #foreach($cr in $coefficientRules)
        #* 第一个的比较符号不一样 *#
    when
        #foreach($value in $cr.thresholdRange)
            real_coefficient_goal_rate #if($velocityCount == 1) >= #else < #end $ytUtil.divide(${value}, 100)
            #if($velocityHasNext) and #end
        #end
    then commission_reward * $ytUtil.divide(${cr.calculatePercent}, 100)
    #end
else '0' end as commission_reward---提成奖品
#end

#* 公用宏，提成类型通用逻辑 *#
#macro(gmv_forward_buildPayoutRule $payoutRules $elseValue)
    ,case
        #foreach($pr in $payoutRules)
        when
            #foreach($value in $pr.ladderAmtRange)
            sts_target #if($velocityCount == 1) >= #else < #end ${value}
                #if($velocityHasNext) and #end
            #end
        then '${pr.payoutStuff}'
        #end
    else ${elseValue} end as commission_reward--提成奖品
#end

#if($plan.coefficientRules && !$plan.coefficientRules.isEmpty())
----有前置系数
insert overwrite table dw_salary_forward_plan_sum_d partition (dayid='$v_date',planno='${plan.no}')
select
    update_time,--更新时间
    update_month,--执行月份
    --方案基础信息,
    plan_month,--方案月份
    plan_pay_time,--方案时间
	planno,--方案编号
    plan_name,--方案名称
    plan_group_id,--归属业务组ID
    plan_group_name,--归属业务组
     ---以下为个性化的配置信息---
    grant_object_type,--发放对象类型
    grant_object_user_id, --发放对象ID
    grant_object_user_name,--发放对象名称
	grant_object_user_dep_id,--发放对象部门ID
    grant_object_user_dep_name,--发放对象部门
    leave_time,--发放对象离职时间
    --统计指标名称
    sts_target_name,
	sts_target,--统计指标数值
	real_coefficient_goal_rate,--发放对象的当月系数
    commission_cap,--提成上限
    commission_plan_type,--提成方案类型
    commission_reward_type--提成奖品类型 金额/实物
    --系数逻辑
    --有系数 累计阶梯
    --根据统计指标数值及提成上限 换算出 提成奖品
    --累计阶梯逻辑
    --判断必须从大到小
    #*
        case when    real_coefficient_goal_rate>= 100  then commission_reward *120%
        when  real_coefficient_goal_rate >=90 and real_coefficient_goal_rate <100  then commission_reward*100%
        --
        else 0 end as commission_reward ,---提成奖品
        --有系数 累计返点
        case when   real_coefficient_goal_rate>= 100  then commission_reward *120%
        when  real_coefficient_goal_rate >=90 and real_coefficient_goal_rate <100  then commission_reward*100%
        else 0 end as commission_reward ,---提成奖品
        --有系数 累计返实物
        case when    real_coefficient_goal_rate>100  then commission_reward
        else '无奖品' as commission_reward ---提成奖品
    *#
    #* 1: 累计阶梯返现 2: 累计阶梯返点 3: 累计阶梯返实物 *#
    #if($plan.payoutRuleType.code == 1)
        #gmv_forward_buildCoefficientRules($plan.coefficientRules)
    #end
    #if($plan.payoutRuleType.code == 2)
        --有系数 累计返点
        #gmv_forward_buildCoefficientRules($plan.coefficientRules)
    #end
    #if($plan.payoutRuleType.code == 3)
        --有系数 累计返实物
        ,case when  real_coefficient_goal_rate > $ytUtil.divide(${plan.coefficientRules[0].thresholdPercent}, 100)  then commission_reward
        else '无奖品' end as commission_reward ---提成奖品
    #end

 from
 (select

    from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') as update_time,--更新时间
    from_unixtime(unix_timestamp(),'yyyy-MM') as update_month,--执行月份
    --方案基础信息,
    plan_month,--方案月份
    plan_pay_time,--方案时间
	planno,--方案编号
    plan_name,--方案名称
    plan_group_id,--归属业务组ID
    plan_group_name,--归属业务组
     ---以下为个性化的配置信息---
    grant_object_type,--发放对象类型
    grant_object_user_id, --发放对象ID
    grant_object_user_name,--发放对象名称
	grant_object_user_dep_id,--发放对象部门ID
    grant_object_user_dep_name,--发放对象部门
    leave_time,--发放对象离职时间
    --统计指标名称
    sts_target_name,
	sts_target,--统计指标数值
	real_coefficient_goal_rate,--发放对象的当月系数
    --提成上限
    #if($plan.payoutUpperLimit)
        '${plan.payoutUpperLimit}' as commission_cap,
    #else
        null as commission_cap,
    #end
    --提成方案类型
    #if($plan.payoutRuleType)
        '${plan.payoutRuleType.title}' as commission_plan_type,
    #else
        null as commission_plan_type,
    #end
    --提成奖品类型
    #if($plan.payoutRuleType.code == 3)
        '实物' as commission_reward_type
    #else
        '金额' as commission_reward_type
    #end

    --根据统计指标数值及提成上限 换算出 提成奖品
    --累计阶梯逻辑
    --判断必须从大到小
    #if($plan.payoutRules && !$plan.payoutRules.isEmpty())
        #if($plan.payoutRuleType.code == 1)
            #gmv_forward_buildPayoutRule($plan.payoutRules, '0')
        #end
    -- 累计返点
        #if($plan.payoutRuleType.code == 2)
        ,case
            #if($plan.payoutUpperLimit)
                #foreach($pr in $plan.payoutRules)
                when
                    #foreach($value in ${pr.ladderAmtRange})
                    sts_target #if($velocityCount == 1) >= #else < #end ${value}
                        #if($velocityHasNext)
                        and
                        #else
                        and sts_target * $ytUtil.divide(${pr.payoutStuff}, 100) #if($plan.payoutUpperLimit) < $plan.payoutUpperLimit #end
                        #end
                    #end
                then round(sts_target * $ytUtil.divide(${pr.payoutStuff}, 100), 4)
                when
                    #foreach($value in $pr.ladderAmtRange)
                    sts_target #if($velocityCount == 1) >= #else < #end ${value}
                        #if($velocityHasNext)
                        and
                        #else
                        and sts_target * $ytUtil.divide(${pr.payoutStuff}, 100) #if($plan.payoutUpperLimit) >= $plan.payoutUpperLimit #end
                        #end
                    #end
                then $plan.payoutUpperLimit
                #end
            #else
                #foreach($pr in $plan.payoutRules)
                when
                    #foreach($value in $pr.ladderAmtRange)
                    sts_target #if($velocityCount == 1) >= #else < #end ${value}
                        #if($velocityHasNext) and #end
                    #end
                then round(sts_target * $ytUtil.divide($pr.payoutStuff, 100), 4)
                #end
            #end
        else '0' end as commission_reward --提成奖品
        #end
        #if($plan.payoutRuleType.code == 3)
            -- 累计返实物
            #gmv_forward_buildPayoutRule($plan.payoutRules, "'无奖品'")
        #end
    #end

 from
 (
select
    --方案基础信息
    plan_month,--方案月份
    plan_pay_time,--方案时间
	planno,--方案编号
    plan_name,--方案名称
    plan_group_id,--归属业务组ID
    plan_group_name,--归属业务组
     ---以下为个性化的配置信息---
    grant_object_type,--发放对象类型
    grant_object_user_id, --发放对象ID
    grant_object_user_name,--发放对象名称
	grant_object_user_dep_id,--发放对象部门ID
    grant_object_user_dep_name,--发放对象部门
    leave_time,--发放对象离职时间
    --统计指标名称
    sts_target_name,
	--发放对象的当月系数
    sum(sts_target) as sts_target
    from dw_salary_gmv_rule_public_d
	where dayid ='$v_date' and pltype='cur' and planno='${plan.no}'
	group by
	plan_month,--方案月份
    plan_pay_time,--方案时间
	planno,--方案编号
    plan_name,--方案名称
    plan_group_id,--归属业务组ID
    plan_group_name,--归属业务组
     ---以下为个性化的配置信息---
    grant_object_type,--发放对象类型
    grant_object_user_id, --发放对象ID
    grant_object_user_name,--发放对象名称
	grant_object_user_dep_id,--发放对象部门ID
    grant_object_user_dep_name,--发放对象部门
    leave_time,--发放对象离职时间
    --统计指标名称
    sts_target_name

	) forward_plan

    left join
	( select *
       from dw_salary_user_coefficient_d
	   where dayid='$v_date'
	) salary_rate on forward_plan.grant_object_user_id=salary_rate.service_user_id
   ) plan_sum

;
    #else
--无前置系数逻辑

insert overwrite table dw_salary_forward_plan_sum_d partition (dayid='$v_date',planno='${plan.no}')
select

    from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss') as update_time,--更新时间
    from_unixtime(unix_timestamp(),'yyyy-MM') as update_month,--执行月份
    --方案基础信息
    plan_month,--方案月份
    plan_pay_time,--方案时间
	planno,--方案编号
    plan_name,--方案名称
    plan_group_id,--归属业务组ID
    plan_group_name,--归属业务组
     ---以下为个性化的配置信息---
    grant_object_type,--发放对象类型
    grant_object_user_id, --发放对象ID
    grant_object_user_name,--发放对象名称
	grant_object_user_dep_id,--发放对象部门ID
    grant_object_user_dep_name,--发放对象部门
    leave_time,--发放对象离职时间
    --统计指标名称
    sts_target_name,
	sts_target,--统计指标数值
	real_coefficient_goal_rate,--发放对象的当月系数
    #if($plan.payoutUpperLimit)
        '${plan.payoutUpperLimit}' as commission_cap,
    #else
        null as commission_cap,
    #end
    --提成方案类型
    #if($plan.payoutRuleType)
        '${plan.payoutRuleType.title}' as commission_plan_type,
    #else
        null as commission_plan_type,
    #end
    --提成奖品类型
    #if($plan.payoutRuleType.code == 3)
        '实物' as commission_reward_type
    #else
        '金额' as commission_reward_type
    #end
    --无系数
    --根据统计指标数值及提成上限 换算出 提成奖品
    --累计阶梯逻辑
    --判断必须从大到小
    #*
        --根据统计指标数值及提成上限 换算出 提成奖品
        --累计阶梯逻辑
        --判断必须从大到小
        case when 是否有系数=否 and 提成类型='累计阶梯' and 统计指标数值>=200  then 5
        when 是否有系数=否 and 提成类型='累计阶梯' and 统计指标数值>=100 and 统计指标数值<200 then 2
        when 是否有系数=否 and 提成类型='累计阶梯' and 统计指标数值>=50  then 1
        else 0 end as commission_reward ,--提成奖品
        -- 累计返点
        --用户设置了提成上限才和提成上限比较，无提成上限时候去掉和提成上限比较的逻辑
        case when   统计指标数值>=200  and 统计指标数值 *5% < 提成上限 then 统计指标数值 *5%  --假设用户没设置提成上限，这里比较是有问题的
        when   统计指标数值>=200  and 统计指标数值 *5% >=提成上限 then 提成上限 --假设提成上限是0 这个逻辑是有问题的

        when  统计指标数值>=100 and 统计指标数值<200 and  统计指标数值 *2% <提成上限  then  统计指标数值 *2%
        when 统计指标数值>=100 and 统计指标数值<200 and  统计指标数值 *2% >=提成上限  then  提成上限
        --
        else 0 as commission_reward ,--提成奖品
        -- 累计返实物
        case when   统计指标数值>=200   then  'iphone11'
        when  统计指标数值>=100 and 统计指标数值<200   then  'iphone4'
        --
        else '无奖品' as commission_reward --提成奖品
    *#
    #if($plan.payoutRules && !$plan.payoutRules.isEmpty())
        #if($plan.payoutRuleType.code == 1)
            #gmv_forward_buildPayoutRule($plan.payoutRules, '0')
        #end
        #if($plan.payoutRuleType.code == 2)
        -- 累计返点
        ,case
            #if($plan.payoutUpperLimit)
                #foreach($pr in $plan.payoutRules)
                when
                    #foreach($value in ${pr.ladderAmtRange})
                    sts_target #if($velocityCount == 1) >= #else < #end ${value}
                        #if($velocityHasNext)
                        and
                        #else
                        and sts_target * $ytUtil.divide(${pr.payoutStuff}, 100) #if($plan.payoutUpperLimit) < $plan.payoutUpperLimit #end
                        #end
                    #end
                then round(sts_target * $ytUtil.divide(${pr.payoutStuff}, 100), 4)
                when
                    #foreach($value in $pr.ladderAmtRange)
                    sts_target #if($velocityCount == 1) >= #else < #end ${value}
                        #if($velocityHasNext)
                        and
                        #else
                        and sts_target * $ytUtil.divide(${pr.payoutStuff}, 100) #if($plan.payoutUpperLimit) >= $plan.payoutUpperLimit #end
                        #end
                    #end
                then $plan.payoutUpperLimit
                #end
            #else
                #foreach($pr in $plan.payoutRules)
                when
                    #foreach($value in $pr.ladderAmtRange)
                    sts_target #if($velocityCount == 1) >= #else < #end ${value}
                        #if($velocityHasNext) and #end
                    #end
                then round(sts_target * $ytUtil.divide($pr.payoutStuff, 100), 4)
                #end
            #end
        else '0' end as commission_reward --提成奖品
        #end
        #if($plan.payoutRuleType.code == 3)
        -- 累计返实物
            #gmv_forward_buildPayoutRule($plan.payoutRules, "'无奖品'")
        #end
    #end
 from
 (
select
    --方案基础信息,
    plan_month,--方案月份
    plan_pay_time,--方案时间
	planno,--方案编号
    plan_name,--方案名称
    plan_group_id,--归属业务组ID
    plan_group_name,--归属业务组
     ---以下为个性化的配置信息---
    grant_object_type,--发放对象类型
    grant_object_user_id, --发放对象ID
    grant_object_user_name,--发放对象名称
	grant_object_user_dep_id,--发放对象部门ID
    grant_object_user_dep_name,--发放对象部门
    leave_time,--发放对象离职时间
    --统计指标名称
    sts_target_name,
	--发放对象的当月系数
    sum(sts_target) as sts_target
    from dw_salary_gmv_rule_public_d
	where dayid ='$v_date' and pltype='cur' and planno='${plan.no}'
	group by
	plan_month,--方案月份
    plan_pay_time,--方案时间
	planno,--方案编号
    plan_name,--方案名称
    plan_group_id,--归属业务组ID
    plan_group_name,--归属业务组
     ---以下为个性化的配置信息---
    grant_object_type,--发放对象类型
    grant_object_user_id, --发放对象ID
    grant_object_user_name,--发放对象名称,
	grant_object_user_dep_id,--发放对象部门ID
    grant_object_user_dep_name,--发放对象部门
    leave_time,--发放对象离职时间
    --统计指标名称
    sts_target_name

	) forward_plan

    left join
	( select *
       from dw_salary_user_coefficient_d
	   where dayid='$v_date'
	) salary_rate on forward_plan.grant_object_user_id=salary_rate.service_user_id
;
#end