/**
 * gradle 本身需要的配置
 */
buildscript {
    apply from: "library.gradle"
    repositories {
        mavenCentral()
    }
    dependencies {
        /* 添加插件依赖路径（通过jar方式） */
        //添加springBootGradle插件之后，很多Spring依赖都不需要指定版本号，自动管理依赖版本
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}")
    }
}

/* 所有子项目的通用配置 */
subprojects {
    apply plugin: 'java' /* java是Gradle的核心插件，是内置的，内置插件不需要配置依赖路径 */
    apply plugin: 'idea' /* 同上  让Gradle自动生成Intellij的项目文件*/
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management' /* 依赖管理，用来传递spring的依赖 */

    group = 'com.peach'
    version = '0.0.1' /* 项目版本 */
    sourceCompatibility = '1.8'

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    /* 添加通用依赖 */
    dependencies {
        //implementation 'org.springframework.boot:spring-boot-starter-web'  这种写法也可以
        compile('org.springframework.boot:spring-boot-starter-web')
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testCompile('org.springframework.boot:spring-boot-starter-test')
        //testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}
