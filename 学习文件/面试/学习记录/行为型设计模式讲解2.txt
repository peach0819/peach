-------------责任链模式
责任链，就是流程节点的过程，是一个无阻塞的过程
当前节点的输入是上个节点的输出

也可以在一个filter里面，遇到条件，就return返回了，不然才继续执行
chain.doFilter()，进入下一个节点

servlet是先执行一系列的filter，然后再进入servlet，
就比如说登录过滤这种，判断有登录信息，然后才能执行接口

不同过程，分离开来，可以达到解耦、复用的效果

责任链的实现
两个接口，一个Filter， 一个FilterChain， 
Filter是实际执行的过滤器，FilterChain 是所有过滤器的链
在FilterChain里面有一个列表，记录了所有的过滤器，有一个记录当前位置的参数
而FilterChain里面的dofilter方法，就是根据当前位置的参数获取当前位置的过滤器并执行

Filter的dofilter方法，有一个额外的参数，就是filterChain，FilterChain调用的时候，传入this
被FilterChain 的dofilter方法调用，执行自己的过滤逻辑
在执行完自己的逻辑之后，需要重新调用filterChain.dofilter()，进入下一个过滤器


-------------拦截器模式
就是把执行过程之中的一部分，切断，执行拦截器逻辑
AOP就是典型的拦截器模式

Advice就是通知的意思
拦截分为方法之前记录，before，实现MethodBeforeAdvice，
之后拦截， after，实现AfterRunningAdvice
异常拦截，exception, 实现ThrowsAdvice


-------------观察者模式
当被观察者的状态发生任何改变的时候，自动通知观察者

java里面自带
Observer是观察者
有一个update方法

Observable 是被观察者，就是发布者
有boolean changed和Vector<Observer>两个字段，就是状态是否改变和所有的观察者

需要先注册号list里面包含的观察者，然后调用setChange方法，表示已经改变

之后调用observable.notifyObservers方法，对观察者list里面，每个观察者调用update方法


-------------访问者模式（方法重载）
登录接口 interface，访问者是被登录接受的内容
就是登录方法的参数；

访问者接口interface, 登录接口是访问者可访问的对象
就是访问方法的参数

就是通过访问者接口的不同实现，对登录接口进行多个重载，配置不同的参数

就是实际上都是接口的方法，参数都是某种接口的实现，传进来不同的这个参数的实现
不影响这个方法名


-------------调停者模式 （协调者，控制多个组件的状态）
一个接口里面，有注册值的方法，有执行的方法
在实际实现里面，注册值的方法，往实现类里面的字段进行赋值
而执行的方法，就是对每个注册的值进行操作
就是给一个统一操作多内容的过程，

有点像门面模式

门面模式是控制执行逻辑，调用别的参数的方法，注重执行逻辑
而几个逻辑是没有什么相互之间的关系的，只是流程

而调停者模式是控制不同的参数的状态，注重状态（更加注意协调）
可能几种状态时互斥的，或者有相互联系的







